[gd_scene load_steps=8 format=1]

[ext_resource path="res://fonts/retroFont.fnt" type="BitmapFont" id=1]
[ext_resource path="res://scenes/HealthBar.tscn" type="PackedScene" id=2]
[ext_resource path="res://scenes/Dialog.tscn" type="PackedScene" id=3]
[ext_resource path="res://graphics/effects/fade.tex" type="Texture" id=4]

[sub_resource type="GDScript" id=1]

script/source = "extends Control

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"
var border_panel
var content_panel
var container
var rich_text_label

var width
var height = 196
var inner_width
var inner_height

var pos

var outer_margin = 128
var inner_margin = 8

export var messages = [\"Hello, my name is Flan, welcome to Nameless Kingdom. We are here to have fun and play a little bit. THROWBACK!!!\", \"Goodbye, fuck off Nameless Kingdom. We are here to have fun and play a little bit. BACKTHROW!!!\", \"We are here to have fun and play a little bit. THROWBACK!!!\"]
var current_message
var current_message_array

var message_counter = 0
var characters_shown = 0
var next_word = 0
export var text_speed = 0.1

var elapsed_time = 0.0
var is_message_written = false

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	border_panel = get_node(\"BorderPanel\")
	content_panel = get_node(\"ContentPanel\")
	rich_text_label = get_node(\"Text\")
	
	init()
	
	width = get_viewport().get_rect().size.width - outer_margin
	inner_width = width - inner_margin
	inner_height = height - inner_margin
	
	pos = get_parent().get_pos()
	get_parent().set_pos(Vector2(pos.x + outer_margin / 3, pos.y))
	
	border_panel.set_size(Vector2(width, height))
	content_panel.set_size(Vector2(inner_width, inner_height))
	rich_text_label.set_size(Vector2(inner_width - 8, inner_height - 8))
	rich_text_label.set_bbcode(current_message)
	rich_text_label.set_visible_characters(characters_shown)
	
	set_process(true)
	set_process_input(true)
	pass
	
func _process(delta):
	if(get_parent().is_visible()):
		elapsed_time += delta
		
		if(elapsed_time >= text_speed && !is_message_written):
			draw_next_word()
	pass

func _input(event):
	if (Input.is_action_pressed(\"ui_accept\")):
		complete_or_next_page()

func init():
	message_counter = 0
	current_message = messages[message_counter]
	current_message_array = current_message.split(\" \")
	characters_shown = current_message_array[0].length()
	next_word = 0
	rich_text_label.set_bbcode(current_message)
	rich_text_label.set_visible_characters(characters_shown)
	is_message_written = false

func complete_or_next_page():
	if(!is_message_written):
		characters_shown = current_message.length()
		next_word = current_message_array.size()
		rich_text_label.set_visible_characters(characters_shown)
		is_message_written = true
	else:
		message_counter += 1
		if(message_counter < messages.size()):
			next_page()
		else:
			hide_dialog()

func next_page():
	#print(\"MESSAGE\", \": \", current_message_array[next_word])
	#print(\"CHARACTERS\", \": \", characters_shown)
	#print(\"NEXT WORD\", \": \", next_word)
	current_message = messages[message_counter]
	current_message_array = current_message.split(\" \")
	characters_shown = 0
	next_word = 0
	is_message_written = false
	rich_text_label.set_bbcode(current_message)
	rich_text_label.set_visible_characters(characters_shown)

func draw_next_word():
	#print(\"MESSAGE\", \": \", current_message_array[next_word])
	#print(\"CHARACTERS\", \": \", characters_shown)
	#print(\"NEXT WORD\", \": \", next_word)
	characters_shown += current_message_array[next_word].length() + 1
	next_word += 1
	rich_text_label.set_visible_characters(characters_shown)
	elapsed_time = 0.0 #Start counter
	if(next_word >= current_message_array.size()):
		is_message_written = true

func hide_dialog():
	get_parent().hide()
	init()"

[sub_resource type="Animation" id=2]

resource/name = "fade_in"
length = 2.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 2 ),
"transitions": FloatArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=3]

resource/name = "fade_out"
length = 2.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 2 ),
"transitions": FloatArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[node name="CanvasLayer_HUD" type="CanvasLayer"]

layer = 1
offset = Vector2( 0, 0 )
rotation = 0.0
scale = Vector2( 1, 1 )

[node name="GridContainer" type="GridContainer" parent="."]

rect/scale = Vector2( 1.5, 1.5 )
focus/ignore_mouse = false
focus/stop_mouse = false
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 16.0
margin/top = 16.0
margin/right = 40.0
margin/bottom = 40.0
custom_constants/vseparation = 32
columns = 2

[node name="PlayerHUD" type="Control" parent="GridContainer"]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 0.0
margin/top = 0.0
margin/right = 0.0
margin/bottom = 0.0

[node name="Label" type="Label" parent="GridContainer/PlayerHUD"]

focus/ignore_mouse = true
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 0
margin/left = 0.0
margin/top = 0.0
margin/right = 126.0
margin/bottom = 18.0
custom_fonts/font = ExtResource( 1 )
custom_colors/font_color = Color( 0.203922, 0.662745, 0.372549, 1 )
text = "PLAYER"
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="Healthbar" parent="GridContainer/PlayerHUD" instance=ExtResource( 2 )]

margin/left = 20.0
margin/right = 20.0

[node name="EnemyHUD" type="Control" parent="GridContainer"]

visibility/visible = false
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 4.0
margin/top = 0.0
margin/right = 4.0
margin/bottom = 0.0

[node name="Label" type="Label" parent="GridContainer/EnemyHUD"]

focus/ignore_mouse = true
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 0
margin/left = 0.0
margin/top = 32.0
margin/right = 105.0
margin/bottom = 50.0
custom_fonts/font = ExtResource( 1 )
custom_colors/font_color = Color( 0.207529, 0.664062, 0.375156, 1 )
text = "ENEMY"
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="Healthbar" parent="GridContainer/EnemyHUD" instance=ExtResource( 2 )]

margin/left = 20.0
margin/top = 32.0
margin/right = 20.0
margin/bottom = 32.0

[node name="Dialog_HUD" type="CenterContainer" parent="."]

editor/display_folded = true
visibility/visible = false
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 0.0
margin/top = 0.0
margin/right = 40.0
margin/bottom = 40.0
use_top_left = false

[node name="Dialog" parent="Dialog_HUD" instance=ExtResource( 3 )]

margin/left = 20.0
margin/top = 20.0
margin/right = 20.0
margin/bottom = 20.0
script/script = SubResource( 1 )
messages = [ "Hello, my name is Flan, welcome to Nameless Kingdom. We are here to have fun and play a little bit. THROWBACK!!!", "Goodbye, fuck off Nameless Kingdom. We are here to have fun and play a little bit. BACKTHROW!!!", "We are here to have fun and play a little bit. THROWBACK!!!" ]

[node name="fadesprite" type="Sprite" parent="."]

editor/display_folded = true
visibility/visible = false
transform/pos = Vector2( 485.731, 295.993 )
transform/scale = Vector2( 3, 3 )
texture = ExtResource( 4 )

[node name="anim" type="AnimationPlayer" parent="fadesprite"]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/fade_in = SubResource( 2 )
anims/fade_out = SubResource( 3 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = ""


